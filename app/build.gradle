apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'ext-properties'

//noinspection GroovyAssignabilityCheck
dependencies {

    //compile "com.android.support:support-v4:${supportPackageVersion}"
    compile "com.android.support:appcompat-v7:${supportPackageVersion}"
    compile "com.android.support:preference-v7:${supportPackageVersion}"
    //compile "com.android.support:support-v13:${supportPackageVersion}"
    //compile "com.android.support:preference-v14:${supportPackageVersion}"
    compile "com.android.support:design:${supportPackageVersion}"
    compile "com.android.support:percent:${supportPackageVersion}"
    //compile "com.android.support:customtabs:${supportPackageVersion}"
    //compile "com.android.support:leanback-v17:${supportPackageVersion}"
    //compile "com.android.support:preference-leanback-v17:${supportPackageVersion}"
    //compile "com.android.support:recyclerview-v7:${supportPackageVersion}"
    //compile "com.android.support:gridlayout-v7:${supportPackageVersion}"
    //compile "com.android.support:mediarouter-v7:${supportPackageVersion}"
    //compile "com.android.support:palette-v7:${supportPackageVersion}"
    //compile "com.android.support:cardview-v7:${supportPackageVersion}"
    compile "com.android.support:support-annotations:${supportPackageVersion}"

    compile 'com.google.android:flexbox:0.2.3'

    compile "com.android.support.constraint:constraint-layout:1.0.0-alpha5"

    compile "com.jakewharton:butterknife:8.1.0"
    apt "com.jakewharton:butterknife-compiler:8.1.0"

    compile "com.squareup.dagger:dagger:1.2.5"
    apt "com.squareup.dagger:dagger-compiler:1.2.5"

    compile "net.vvakame:jsonpullparser-core:1.6.2"
    apt "net.vvakame:jsonpullparser-apt:1.6.2"

    compile "org.greenrobot:eventbus:3.0.0"

    compile "com.squareup.okio:okio:1.8.0"
    compile "com.squareup.okhttp:okhttp:2.7.5"
    compile "com.squareup.okhttp:okhttp-urlconnection:2.7.5"

    compile "com.squareup.retrofit:retrofit:1.9.0"

    compile "io.reactivex:rxjava:1.0.14"
    compile "io.reactivex:rxandroid:1.0.1"

    // https://github.com/sockeqwe/fragmentargs
    compile 'com.hannesdorfmann.fragmentargs:annotation:3.0.2'
    apt 'com.hannesdorfmann.fragmentargs:processor:3.0.2'

    compile "se.emilsjolander:intentbuilder-api:0.14.0"
    apt "se.emilsjolander:intentbuilder-compiler:0.14.0"

    // Google Play Services 全体を取り込む場合はこちらを。一部機能だけ取り込む場合はコメントアウトし、下から必要な物を有効化
    /*
     * proguard をかけないとメソッド数上限に当たる可能性が高い。
     * 分割版を使うか、 android.buildTypes.debug.multiDexEnabled を true にするのがおすすめ
     */
    //compile "com.google.android.gms:play-services:${playServicesVersion}"

    // Google Play Services の機能分割版 https://developers.google.com/android/guides/setup
    // Google Plus
    //compile "com.google.android.gms:play-services-plus:${playServicesVersion}"
    // Google Account Login
    //compile "com.google.android.gms:play-services-auth:${playServicesVersion}"
    // Google Actions, Base Client Library
    //compile "com.google.android.gms:play-services-base:${playServicesVersion}"
    // Google Address
    //compile "com.google.android.gms:play-services-identity:${playServicesVersion}"
    // Google App Indexing
    //compile "com.google.android.gms:play-services-appindexing:${playServicesVersion}"
    // Google App Invites
    //compile "com.google.android.gms:play-services-appinvite:${playServicesVersion}"
    // Google Analytics
    //compile "com.google.android.gms:play-services-analytics:${playServicesVersion}"
    // Google Cast
    //compile "com.google.android.gms:play-services-cast:${playServicesVersion}"
    // Google Cloud Messaging
    //compile "com.google.android.gms:play-services-gcm:${playServicesVersion}"
    // Google Drive
    //compile "com.google.android.gms:play-services-drive:${playServicesVersion}"
    // Google Fit
    //compile "com.google.android.gms:play-services-fitness:${playServicesVersion}"
    // Google Location, Activity Recognition, and Places
    //compile "com.google.android.gms:play-services-location:${playServicesVersion}"
    // Google Maps
    compile "com.google.android.gms:play-services-maps:${playServicesVersion}"
    // Google Mobile Ads
    //compile "com.google.android.gms:play-services-ads:${playServicesVersion}"
    // Mobile Vision
    //compile "com.google.android.gms:play-services-vision:${playServicesVersion}"
    // Google Nearby
    //compile "com.google.android.gms:play-services-nearby:${playServicesVersion}"
    // Google Panorama Viewer
    //compile "com.google.android.gms:play-services-panorama:${playServicesVersion}"
    // Google Play Game services
    //compile "com.google.android.gms:play-services-games:${playServicesVersion}"
    // SafetyNet
    //compile "com.google.android.gms:play-services-safetynet:${playServicesVersion}"
    // Android Pay
    //compile "com.google.android.gms:play-services-wallet:${playServicesVersion}"
    // Android Wear
    //compile "com.google.android.gms:play-services-wearable:${playServicesVersion}"

    // http://googlemaps.github.io/android-maps-utils/
    compile 'com.google.maps.android:android-maps-utils:0.4.3'

    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.5'

    // libs/ にある *.jar を一括で追加する
    compile fileTree(dir: 'libs', include: '*.jar')

    debugCompile 'com.facebook.stetho:stetho:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp:1.3.1'

    debugCompile project(path: ':library', configuration: 'libDebug')
    releaseCompile project(path: ':library', configuration: 'libRelease')

    androidTestCompile "com.android.support.test:runner:${testingSupportPackageVersion}"
    androidTestCompile "com.android.support:support-annotations:${supportPackageVersion}"

    // android wear 用のアプリを handheld アプリに埋め込む
    wearApp project(':wear')
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId 'com.example.mytemplate'
        minSdkVersion 15
        targetSdkVersion 24

        // support renderscript を使う場合
        // renderscriptTargetApi 21
        // renderscriptOptimLevel 3
        // renderscriptSupportModeEnabled true
        // renderscriptNdkModeEnabled false

        versionCode 1
        versionName '0.0.1'

        // test support libの JUnitRunner
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        useLibrary 'org.apache.http.legacy'

        // CMakeで NDKを使う場合の設定
        // local.properties に ndk.dir=/path/to/ndk の記述を行う必要あり
        // ndk 関連のファイルは例えば app/src/main/cpp/ の下に置く
        // 使用するクラスで System.loadLibrary("native_library"); するのをわすれずに
        //cmake {
        //    cppFlags ""
        //}
    }

    // CMakeで NDKを使う場合の設定
    //externalNativeBuild {
    //    cmake {
    //        path "CMakeLists.txt"
    //    }
    //}

    compileOptions {
        encoding = "UTF-8"
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        // exclude duplicate files in apache commons
        // pickFirst なら最初に見つけたやつが apk に入る
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'

        // for testing support lib
        exclude 'LICENSE.txt'

        exclude 'LICENSE.txt'

        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    signingConfigs {
        // debug {
        //     storeFile file("debug.keystore")
        // }

        release
    }

    aaptOptions {
        // 最近の PNG processor が生成するファイルがGB端末上でクラッシュを引き起こすとのことなので、2系をサポートするなら以下の設定を使う
        // useAaptPngCruncher = true

        // android wear 用の apk を asset に置く場合に、圧縮を行わないようにするための設定
        // see http://developer.android.com/training/wearables/apps/packaging.html
        noCompress "apk"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false // minifyEnabled true の指定必須
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile file('proguard-rules.pro')

            multiDexEnabled false

            jniDebuggable false
            renderscriptDebuggable false

            // ext.properties にリリース署名用の設定があれば署名を有効化します。設定のサンプルとして ext.properties.forReleaseSigning を置いたので参考にしてください。
            if (project.hasProperty('storeFile')) {

                android.signingConfigs.release.storeFile = rootProject.file(storeFile)
                android.signingConfigs.release.storePassword = storePassword
                android.signingConfigs.release.keyAlias = keyAlias
                android.signingConfigs.release.keyPassword = keyPassword

                signingConfig signingConfigs.release
            }

            //API キーは Google APIs Console https://code.google.com/apis/console から取得する。
            // 詳しくは https://developers.google.com/maps/documentation/android/start?hl=ja#the_google_maps_api_key を参照。
            // ex. $ keytool -list -v -keystore ~/.android/release.jks -alias release
            manifestPlaceholders = [maps_v2_apikey: 'リリース用の証明書に対応するAPIキーをここに書く']

            // BuildConfig.DEBUG は compile-time constant ではないので、別途定義する
            buildConfigField "boolean", "DEBUG_COMPILE", "false"
        }

        debug {
            multiDexEnabled false

            jniDebuggable false
            renderscriptDebuggable false

            manifestPlaceholders = [maps_v2_apikey: 'デバッグ用の証明書に対応するAPIキーをここに書く']

            // BuildConfig.DEBUG は compile-time constant ではないので、別途定義する
            buildConfigField "boolean", "DEBUG_COMPILE", "true"
        }
    }
}

// IDE からのビルドと、コマンドラインからのビルドで処理を分けたい場合の書き方
// Android Studio からのビルドでは、コマンドラインオプションに -Pandroid.injected.invoked.from.ide=true が渡される
def isIdeBuild = project.properties['android.injected.invoked.from.ide']
if (isIdeBuild == null || isIdeBuild.equalsIgnoreCase("true")) {
    // do something for ide build
}
